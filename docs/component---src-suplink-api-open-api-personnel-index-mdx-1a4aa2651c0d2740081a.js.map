{"version":3,"sources":["webpack:///../src/suplink/API/openApi/personnel/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","style","fontSize","require","data","property","type","desc","default","code","title","parentName","href","isMDXComponent"],"mappings":"oQASaA,G,UAAe,S,6NAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,2BADR,2BAGA,oBAAMC,MAAO,CACXC,SAAU,KADZ,uDAGA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,SAAO,EAACC,KAAM,CAAC,CACpBC,SAAU,QACVC,KAAM,SACNC,KAAM,6BACNJ,QAAS,IACTK,QAAS,QACR,CACDH,SAAU,OACVC,KAAM,SACNC,KAAM,sBACNJ,QAAS,IACTK,QAAS,KACR,CACDH,SAAU,MACVC,KAAM,SACNC,KAAM,gBACNJ,QAAS,IACTK,QAAS,KACR,CACDH,SAAU,WACVC,KAAM,WACNC,KAAM,iBACNJ,QAAS,IACTK,QAAS,OACPR,QAAQ,UACZ,iBAAQ,CACN,GAAM,QADR,QAGA,iBAAQ,CACN,GAAM,QADR,QAGA,YAAC,IAAD,CAAKS,KAAI,qPAWVC,MAAM,OAAOH,KAAK,QAAQP,QAAQ,QACjC,iBAAQ,CACN,GAAM,gBADR,gBAGA,gCAAe,6BAAGW,WAAW,KAAQ,CACjC,KAAQ,wEADG,wEAGf,YAAC,IAAD,CAAKF,KAAI,2wBA4BVC,MAAM,OAAOH,KAAK,OAAOP,QAAQ,QAChC,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAOI,KAAM,CAAC,CACZC,SAAU,OACVC,KAAM,SACNC,KAAM,aACL,CACDF,SAAU,MACVC,KAAM,SACNC,KAAM,sBACL,CACDF,SAAU,OACVC,KAAM,wBACF,iBAAGM,KAAK,SAAR,WAEJL,KAAM,UACJP,QAAQ,UACZ,iBAAQ,CACN,GAAM,QADR,QAGA,YAAC,IAAD,CAAOI,KAAM,CAAC,CACZC,SAAU,YACVC,KAAM,SACNC,KAAM,UACL,CACDF,SAAU,QACVC,KAAM,SACNC,KAAM,MACL,CACDF,SAAU,YACVC,KAAM,SACNC,KAAM,QACL,CACDF,SAAU,WACVC,KAAM,SACNC,KAAM,MACL,CACDF,SAAU,eACVC,KAAM,SACNC,KAAM,QACL,CACDF,SAAU,QACVC,KAAM,SACNC,KAAM,QACL,CACDF,SAAU,WACVC,KAAM,SACNC,KAAM,YACL,CACDF,SAAU,SACVC,KAAM,SACNC,KAAM,MACL,CACDF,SAAU,WACVC,KAAM,SACNC,KAAM,MACL,CACDF,SAAU,YACVC,KAAM,SACNC,KAAM,WACL,CACDF,SAAU,QACVC,KAAM,WACNC,KAAM,SACJP,QAAQ,gB,2NAKhBH,EAAWgB,gBAAiB","file":"component---src-suplink-api-open-api-personnel-index-mdx-1a4aa2651c0d2740081a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/hxz/project/js-sdk/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Box, Table } from \"doc-comps/index\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h4 {...{\n      \"id\": \"personnelselector-人员选择器\"\n    }}>{`personnelSelector 人员选择器`}</h4>\n    <span style={{\n      fontSize: 14\n    }}>{`personnelSelector:(params:Params)=> Promise<Return>`}</span>\n    <h5 {...{\n      \"id\": \"入参：-params\"\n    }}>{`入参： Params`}</h5>\n    <Table require data={[{\n      property: \"title\",\n      type: \"string\",\n      desc: `页面的标题（如果UI有导航栏，就需要显示Title）`,\n      require: \"否\",\n      default: \"人员选择\"\n    }, {\n      property: \"type\",\n      type: \"number\",\n      desc: `1：无组织架构选人 2：有组织架构选人`,\n      require: \"否\",\n      default: \"1\"\n    }, {\n      property: \"max\",\n      type: \"number\",\n      desc: \"最多可选人数(默认无限制)\",\n      require: \"否\",\n      default: \"无\"\n    }, {\n      property: \"selected\",\n      type: \"string[]\",\n      desc: \"已选中人员staffCode\",\n      require: \"否\",\n      default: \"[]\"\n    }]} mdxType=\"Table\" />\n    <h5 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h5>\n    <h5 {...{\n      \"id\": \"代码演示\"\n    }}>{`代码演示`}</h5>\n    <Box code={`\n    import Suplink from 'suplink-sdk';\n    Suplink.personnelSelector({\n        type:1,\n        max:10,\n        selected:[],\n        title:'人员选择'\n    }).then(res=>{\n        let {code,msg,data} = res;\n        // do something\n    })\n`} title=\"基本用法\" desc=\"人员选择器\" mdxType=\"Box\" />\n    <h4 {...{\n      \"id\": \"supos-组态页面调用\"\n    }}>{`supOS 组态页面调用`}</h4>\n    <p>{`返回格式请参照 `}<a parentName=\"p\" {...{\n        \"href\": \"http://confluence.bluetron.cn/pages/viewpage.action?pageId=26655369\"\n      }}>{`http://confluence.bluetron.cn/pages/viewpage.action?pageId=26655369`}</a></p>\n    <Box code={`\n    {/* 可编程组件 */}\n    import React from 'react'\n    import {Button} from 'antd'\n    export default class Component extends React.Component {\n      \n      onClick = ()=>{\n           window.zhizhiDispatchAppEvent('sl.contact.selector',{\n             title:\"人员选择\",\n             type:1,  // 1. 无组织架构选人 2. 组织架构中选人\n             maxLimit:10, //  最大可选择人数\n             selected:[] // 已选人员staffCode的数组\n           }).then(res=>{\n             \n               const selected =  res.responseResult.map(item=>{\n                 return {\n                   ...item,\n                   // ...\n                 }\n               })\n           })\n      }\n      render(){\n        return <>\n          <Button onClick={onClick}>人员选择</Button>\n        </>\n      }\n    }\n`} title=\"基本用法\" desc=\"人员选择\" mdxType=\"Box\" />\n    <h6 {...{\n      \"id\": \"返回值：-return\"\n    }}>{`返回值： Return`}</h6>\n    <Table data={[{\n      property: \"code\",\n      type: \"string\",\n      desc: `\"200\"代表成功`\n    }, {\n      property: \"msg\",\n      type: \"string\",\n      desc: `native 返回的 message`\n    }, {\n      property: \"data\",\n      type: <span>\n          <a href=\"#data\">Data[]</a>\n        </span>,\n      desc: \"Array\"\n    }]} mdxType=\"Table\" />\n    <h6 {...{\n      \"id\": \"data\"\n    }}>{`Data`}</h6>\n    <Table data={[{\n      property: \"staffCode\",\n      type: \"string\",\n      desc: `员工唯一Id`\n    }, {\n      property: \"phone\",\n      type: \"string\",\n      desc: `电话`\n    }, {\n      property: \"staffName\",\n      type: `number`,\n      desc: \"员工名字\"\n    }, {\n      property: \"timeZone\",\n      type: `number`,\n      desc: \"时区\"\n    }, {\n      property: \"userRoleList\",\n      type: `number`,\n      desc: \"用户角色\"\n    }, {\n      property: \"email\",\n      type: `number`,\n      desc: \"邮件地址\"\n    }, {\n      property: \"username\",\n      type: `number`,\n      desc: \"supos账号名\"\n    }, {\n      property: \"gender\",\n      type: ` 0 | 1`,\n      desc: \"性别\"\n    }, {\n      property: \"portrail\",\n      type: `number`,\n      desc: \"头像\"\n    }, {\n      property: \"imUserJid\",\n      type: `number`,\n      desc: \"对应的IM账号\"\n    }, {\n      property: \"depts\",\n      type: `string[]`,\n      desc: \"部门列表\"\n    }]} mdxType=\"Table\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}