{"version":3,"sources":["webpack:///../src/suplink/events/EventChannel/demo/basic.tsx?5291","webpack:///../src/suplink/events/EventChannel/demo/basic.tsx","webpack:///../src/suplink/events/EventChannel/index.mdx"],"names":["module","exports","A","EventFunc","alert","componentDidMount","EventChannel","on","this","componentWillUnmount","console","log","off","render","onClick","emit","React","Component","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","style","fontSize","code","BasicDemoCode","title","desc","isMDXComponent"],"mappings":"+EAAAA,EAAOC,QAAU,8nB,4QCGIC,E,oJAKnBC,UAAY,WACVC,MAAM,S,8CALRC,kBAAA,WACEC,IAAaC,GAAG,YAAaC,KAAKL,Y,EAOpCM,qBAAA,WAEEC,QAAQC,IAAI,WACZL,IAAaM,IAAI,YAAaJ,KAAKL,Y,EAGrCU,OAAA,WACE,OACE,sBACEC,QAAS,WACPR,IAAaS,KAAK,eAFtB,O,GAjByBC,IAAMC,gB,+aCQ9B,IAAMC,EAAe,Q,2NAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,MADR,MAGA,iBAAQ,CACN,GAAM,6CADR,iDAGA,oBAAMC,MAAO,CACXC,SAAU,KADZ,UAGA,iBAAQ,CACN,GAAM,mDADR,uDAGA,oBAAMD,MAAO,CACXC,SAAU,KADZ,YAGA,iBAAQ,CACN,GAAM,qDADR,yDAGA,oBAAMD,MAAO,CACXC,SAAU,KADZ,kBAGA,iBAAQ,CACN,GAAM,oDADR,wDAGA,oBAAMD,MAAO,CACXC,SAAU,KADZ,2CAGA,iBAAQ,CACN,GAAM,QADR,QAGA,YAAC,IAAD,CAAKC,KAAMC,IAAeC,MAAM,OAAOC,KAAK,YAAYN,QAAQ,OAClE,YAAC,EAAD,CAAWA,QAAQ,qB,yNAMrBH,EAAWU,gBAAiB","file":"component---src-suplink-events-event-channel-index-mdx-669a2278dce96e7f0496.js","sourcesContent":["module.exports = \"import React from \\\"react\\\";\\r\\nimport { EventChannel } from \\\"suplink-sdk\\\";\\r\\n\\r\\nexport default class A extends React.Component {\\r\\n  componentDidMount() {\\r\\n    EventChannel.on(\\\"eventName\\\", this.EventFunc);\\r\\n  }\\r\\n\\r\\n  EventFunc = () => {\\r\\n    alert(\\\"你点击了\\\");\\r\\n  };\\r\\n\\r\\n  componentWillUnmount() {\\r\\n    //  组件销毁别忘记取消事件\\r\\n    console.log(\\\"unmount\\\");\\r\\n    EventChannel.off(\\\"eventName\\\", this.EventFunc);\\r\\n  }\\r\\n\\r\\n  render() {\\r\\n    return (\\r\\n      <button\\r\\n        onClick={() => {\\r\\n          EventChannel.emit(\\\"eventName\\\");\\r\\n        }}\\r\\n      >\\r\\n        点击\\r\\n      </button>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\"","import React from \"react\";\r\nimport { EventChannel } from \"suplink-sdk\";\r\n\r\nexport default class A extends React.Component {\r\n  componentDidMount() {\r\n    EventChannel.on(\"eventName\", this.EventFunc);\r\n  }\r\n\r\n  EventFunc = () => {\r\n    alert(\"你点击了\");\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    //  组件销毁别忘记取消事件\r\n    console.log(\"unmount\");\r\n    EventChannel.off(\"eventName\", this.EventFunc);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        onClick={() => {\r\n          EventChannel.emit(\"eventName\");\r\n        }}\r\n      >\r\n        点击\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/hxz/project/js-sdk/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Box, Table } from \"doc-comps/index\";\nimport BasicDemoCode from \"!raw-loader!./demo/basic.tsx\";\nimport BasicDemo from \"./demo/basic.tsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h4 {...{\n      \"id\": \"方法\"\n    }}>{`方法`}</h4>\n    <h4 {...{\n      \"id\": \"eventchannelemitstring-eventname-any-args\"\n    }}>{`EventChannel.emit(string eventName, any args)`}</h4>\n    <span style={{\n      fontSize: 14\n    }}>触发一个事件</span>\n    <h4 {...{\n      \"id\": \"eventchannelonstring-eventname-eventcallback-fn\"\n    }}>{`EventChannel.on(string eventName, EventCallback fn)`}</h4>\n    <span style={{\n      fontSize: 14\n    }}>持续监听一个事件</span>\n    <h4 {...{\n      \"id\": \"eventchanneloncestring-eventname-eventcallback-fn\"\n    }}>{`EventChannel.once(string eventName, EventCallback fn)`}</h4>\n    <span style={{\n      fontSize: 14\n    }}>监听一个事件一次，触发后失效</span>\n    <h4 {...{\n      \"id\": \"eventchanneloffstring-eventname-eventcallback-fn\"\n    }}>{`EventChannel.off(string eventName, EventCallback fn)`}</h4>\n    <span style={{\n      fontSize: 14\n    }}>取消监听一个事件。给出第二个参数时，只取消给出的监听函数，否则取消所有监听函数</span>\n    <h6 {...{\n      \"id\": \"代码演示\"\n    }}>{`代码演示`}</h6>\n    <Box code={BasicDemoCode} title=\"基本用法\" desc=\"页面间事件通信通道\" mdxType=\"Box\">\n  <BasicDemo mdxType=\"BasicDemo\" />\n    </Box>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}