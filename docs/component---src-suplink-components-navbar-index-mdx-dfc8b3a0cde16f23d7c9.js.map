{"version":3,"sources":["webpack:///../src/suplink/components/navbar/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","style","fontSize","code","title","desc","BasicDemoCode","parentName","isMDXComponent"],"mappings":"yRAUaA,G,UAAe,S,yNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,oBAAMC,MAAO,CACXC,SAAU,KADZ,qEAGA,iBAAQ,CACN,GAAM,YADR,YAGA,iBAAGD,MAAO,CACRC,SAAU,KADZ,4CAGA,iBAAQ,CACN,GAAM,sBADR,sBAGA,YAAC,IAAD,CAAKC,KAAI,oTAcVC,MAAM,OAAOC,KAAK,YAAYL,QAAQ,QACrC,iBAAQ,CACN,GAAM,OADR,OAGA,YAAC,IAAD,CAAKG,KAAMG,IAAeF,MAAM,OAAOC,KAAK,gBAAgBL,QAAQ,QACpE,iBAAQ,CACN,GAAM,MADR,MAGA,2DACA,iBAAQ,CACN,GAAM,OADR,OAGA,sBACE,kBAAIO,WAAW,MACb,iBAAGA,WAAW,MAAd,gBAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,oBAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,kCAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,6BAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,qBAGJ,+H,uNAKJV,EAAWW,gBAAiB","file":"component---src-suplink-components-navbar-index-mdx-dfc8b3a0cde16f23d7c9.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/hxz/project/js-sdk/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Box, Table } from \"doc-comps/index\";\nimport BasicDemoCode from \"!raw-loader!./demo/basic.tsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h3 {...{\n      \"id\": \"connectnavbar\"\n    }}>{`ConnectNavbar`}</h3>\n    <span style={{\n      fontSize: 14\n    }}>{`<ConnectNavbar routes={routes}  history={history} homePath=\"/\" />`}</span>\n    <h4 {...{\n      \"id\": \"为了解决什么问题\"\n    }}>{`为了解决什么问题`}</h4>\n    <b style={{\n      fontSize: 14\n    }}>为了在 suplink 内部路由跳转， 省略手动设置 navbar 的这一步操作</b>\n    <h4 {...{\n      \"id\": \"之前的方式：-每个页面必须设置的一步\"\n    }}>{`之前的方式： 每个页面必须设置的一步`}</h4>\n    <Box code={`\n    import React from 'react';\n    import {navConfig} from 'suplink';\n    \n    class Component extends React.Component {\n        componentDidMount(){\n            navConfig({\n                title:'页面标题'\n            })\n        }\n        render(){\n            return \"示例组件\"\n        }\n    }\n`} title=\"基本用法\" desc=\"设置 navbar\" mdxType=\"Box\" />\n    <h3 {...{\n      \"id\": \"现在：\"\n    }}>{`现在：`}</h3>\n    <Box code={BasicDemoCode} title=\"基本用法\" desc=\"自动设置小程序navbar\" mdxType=\"Box\" />\n    <h3 {...{\n      \"id\": \"环境\"\n    }}>{`环境`}</h3>\n    <p>{`目前只支持在 react 内部使用， 并且强依赖 history 库`}</p>\n    <h3 {...{\n      \"id\": \"依赖包\"\n    }}>{`依赖包`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`react ^16.8`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`react-dom ^16.8`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`connected-react-router ^6.8.0`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`react-router-dom: ^5.1.6`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`history: ^4.7.8`}</p>\n      </li>\n    </ul>\n    <b>注意： 如果 url 上带有 query 参数 例子： “http://192.168.8.84:8042/select?title=标题” 此组件会自动取 url 上的 title 作为标题</b>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}